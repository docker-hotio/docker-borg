---
kind: pipeline
name: linux-amd64

platform:
  os: linux
  arch: amd64

trigger:
  event:
    - push

steps:
- name: build
  image: plugins/docker
  pull: always
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}
    cache_from: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}
    dockerfile: ${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}.Dockerfile
    tags:
      - ${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
    build_args:
      - BORG_VERSION=${BORG_VERSION=1.2.0a8}

---
kind: pipeline
name: linux-amd64-test

platform:
  os: linux
  arch: amd64

trigger:
  event:
    - push

steps:
- name: list-packages
  image: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
  pull: always
  commands:
    - apt list --installed
- name: show-version
  image: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
  pull: always
  commands:
    - borg --version
- name: create-backup
  image: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
  pull: always
  environment:
    BORG_PASSPHRASE: testpassphrase
  commands:
    - mkdir /tmp/borgtest
    - borg init --encryption=repokey-blake2 /tmp/borgtest
    - borg create --verbose --filter AME --list --stats --show-rc --compression lz4 --exclude-caches /tmp/borgtest::'{hostname}-{now}' "/var/log/"
    - borg prune --list --prefix '{hostname}-' --show-rc --keep-daily 7 --keep-weekly 4 --keep-monthly 6 /tmp/borgtest

depends_on:
  - linux-amd64

---
kind: pipeline
name: linux-arm64

platform:
  os: linux
  arch: arm64

trigger:
  event:
    - push

steps:
- name: build
  image: plugins/docker
  pull: always
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}
    cache_from: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}
    dockerfile: ${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}.Dockerfile
    tags:
      - ${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
    build_args:
      - BORG_VERSION=${BORG_VERSION=1.2.0a8}

---
kind: pipeline
name: linux-arm64-test

platform:
  os: linux
  arch: arm64

trigger:
  event:
    - push

steps:
- name: list-packages
  image: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
  pull: always
  commands:
    - apt list --installed
- name: show-version
  image: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
  pull: always
  commands:
    - borg --version
- name: create-backup
  image: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
  pull: always
  environment:
    BORG_PASSPHRASE: testpassphrase
  commands:
    - mkdir /tmp/borgtest
    - borg init --encryption=repokey-blake2 /tmp/borgtest
    - borg create --verbose --filter AME --list --stats --show-rc --compression lz4 --exclude-caches /tmp/borgtest::'{hostname}-{now}' "/var/log/"
    - borg prune --list --prefix '{hostname}-' --show-rc --keep-daily 7 --keep-weekly 4 --keep-monthly 6 /tmp/borgtest

depends_on:
  - linux-arm64

---
kind: pipeline
name: linux-arm

platform:
  os: linux
  arch: arm

trigger:
  event:
    - push

steps:
- name: build
  image: plugins/docker
  pull: always
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}
    cache_from: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}
    dockerfile: ${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}.Dockerfile
    tags:
      - ${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
    build_args:
      - BORG_VERSION=${BORG_VERSION=1.2.0a8}

---
kind: pipeline
name: linux-arm-test

platform:
  os: linux
  arch: arm

trigger:
  event:
    - push

steps:
- name: list-packages
  image: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
  pull: always
  commands:
    - apt list --installed
- name: show-version
  image: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
  pull: always
  commands:
    - borg --version
- name: create-backup
  image: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}
  pull: always
  environment:
    BORG_PASSPHRASE: testpassphrase
  commands:
    - mkdir /tmp/borgtest
    - borg init --encryption=repokey-blake2 /tmp/borgtest
    - borg create --verbose --filter AME --list --stats --show-rc --compression lz4 --exclude-caches /tmp/borgtest::'{hostname}-{now}' "/var/log/"
    - borg prune --list --prefix '{hostname}-' --show-rc --keep-daily 7 --keep-weekly 4 --keep-monthly 6 /tmp/borgtest

depends_on:
  - linux-arm

---
kind: pipeline
name: manifest

clone:
  disable: true

trigger:
  event:
    - push

steps:
- name: latest
  when:
    branch:
      - stable
  image: plugins/manifest
  pull: always
  settings:
    ignore_missing: false
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    target: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:latest
    template: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-OS-ARCH
    platforms:
      - linux/amd64
      - linux/arm
      - linux/arm64

- name: branch
  image: plugins/manifest
  pull: always
  settings:
    ignore_missing: false
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    target: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}
    template: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-OS-ARCH
    platforms:
      - linux/amd64
      - linux/arm
      - linux/arm64

- name: branch-commit
  image: plugins/manifest
  pull: always
  settings:
    ignore_missing: false
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    target: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}
    template: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-OS-ARCH
    platforms:
      - linux/amd64
      - linux/arm
      - linux/arm64

- name: branch-version
  image: plugins/manifest
  pull: always
  settings:
    ignore_missing: false
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    target: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${BORG_VERSION=1.2.0a8}
    template: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME##docker-}:${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}-${DRONE_BUILD_NUMBER}-OS-ARCH
    platforms:
      - linux/amd64
      - linux/arm
      - linux/arm64

depends_on:
  - linux-amd64-test
  - linux-arm64-test
  - linux-arm-test

---
kind: pipeline
name: notify

trigger:
  event:
  - push
  status:
  - success
  - failure

steps:
- name: discord
  image: ${DRONE_REPO_OWNER}/base:focal
  pull: always
  environment:
    DISCORD_ID:
      from_secret: discord_id
    DISCORD_TOKEN:
      from_secret: discord_token
    VERSION_FIELD: ${BORG_VERSION=1.2.0a8}
  commands:
    - curl -fsSL https://gist.githubusercontent.com/hotio/d490b6447ddde9634475ddacbc85d8c1/raw/discord-build-notify.sh > discord-build-notify.sh
    - bash discord-build-notify.sh

depends_on:
  - manifest
